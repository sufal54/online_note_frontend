{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/sufal/Desktop/assiments/software_enginerr_intern/frontend/src/api/auth.api.ts"],"sourcesContent":["import { ApiResponse, LoginDataType, UserDataType } from \"@/app/interfaces/interface\";\n\nconst baseUrl = process.env.NEXT_PUBLIC_BACKEND_URL as string;\nexport const register = async ({ username, email, password }: LoginDataType): Promise<boolean> => {\n    const fetchData = await fetch(`${baseUrl}/api/auth/register`, {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({ username, email, password })\n    });\n    const data: ApiResponse = await fetchData.json();\n    return data.success;\n}\n\nexport const login = async ({ email, password }: { email: string; password: string }): Promise<boolean> => {\n    const fetchData: ApiResponse = await fetch(`${baseUrl}/api/auth/login`, {\n        method: \"POST\", headers: {\n            \"Content-Type\": \"application/json\"\n        }, credentials: \"include\", body: JSON.stringify({ email, password })\n    }).then((data) => data.json());\n    return fetchData.success;\n}\n\nexport const getUserData = async (): Promise<UserDataType | null> => {\n    console.log(`${baseUrl}/api/auth/profile`)\n    const fetchData: ApiResponse = await fetch(`${baseUrl}/api/auth/profile`, { credentials: \"include\" }).then((data) => data.json());\n    console.log(fetchData);\n    if (fetchData.success) {\n\n        return fetchData.data;\n    }\n    return null;\n}"],"names":[],"mappings":";;;;;AAEgB;AAAhB,MAAM;AACC,MAAM,WAAW,OAAO,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,EAAiB;IACvE,MAAM,YAAY,MAAM,MAAM,GAAG,QAAQ,kBAAkB,CAAC,EAAE;QAC1D,QAAQ;QACR,SAAS;YACL,gBAAgB;QACpB;QACA,MAAM,KAAK,SAAS,CAAC;YAAE;YAAU;YAAO;QAAS;IACrD;IACA,MAAM,OAAoB,MAAM,UAAU,IAAI;IAC9C,OAAO,KAAK,OAAO;AACvB;AAEO,MAAM,QAAQ,OAAO,EAAE,KAAK,EAAE,QAAQ,EAAuC;IAChF,MAAM,YAAyB,MAAM,MAAM,GAAG,QAAQ,eAAe,CAAC,EAAE;QACpE,QAAQ;QAAQ,SAAS;YACrB,gBAAgB;QACpB;QAAG,aAAa;QAAW,MAAM,KAAK,SAAS,CAAC;YAAE;YAAO;QAAS;IACtE,GAAG,IAAI,CAAC,CAAC,OAAS,KAAK,IAAI;IAC3B,OAAO,UAAU,OAAO;AAC5B;AAEO,MAAM,cAAc;IACvB,QAAQ,GAAG,CAAC,GAAG,QAAQ,iBAAiB,CAAC;IACzC,MAAM,YAAyB,MAAM,MAAM,GAAG,QAAQ,iBAAiB,CAAC,EAAE;QAAE,aAAa;IAAU,GAAG,IAAI,CAAC,CAAC,OAAS,KAAK,IAAI;IAC9H,QAAQ,GAAG,CAAC;IACZ,IAAI,UAAU,OAAO,EAAE;QAEnB,OAAO,UAAU,IAAI;IACzB;IACA,OAAO;AACX"}},
    {"offset": {"line": 57, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 63, "column": 0}, "map": {"version":3,"sources":["file:///home/sufal/Desktop/assiments/software_enginerr_intern/frontend/src/app/login/page.tsx"],"sourcesContent":["\"use client\";\nimport React from \"react\";\nimport Link from \"next/link\";\nimport { useState } from \"react\";\nimport { useRouter } from \"next/navigation\";\nimport { LoginDataType } from \"../interfaces/interface\";\nimport { login, register } from \"@/api/auth.api\";\n\nconst Page: React.FC = () => {\n  const [userData, setUserData] = useState<LoginDataType>({\n    username: \"\",\n    email: \"\",\n    password: \"\",\n  });\n  const [wrongID, setWrongID] = useState<boolean>(false);\n  const [isWait, setIsWait] = useState<boolean>(false);\n\n  const [isLogin, setIsLogin] = useState<boolean>(true);\n  const router = useRouter();\n\n  const toggleForm = (): void => {\n    setIsLogin((prv) => !prv);\n    setWrongID(false);\n    setUserData({ username: \"\", email: \"\", password: \"\" });\n  };\n\n  const formDataSubmit = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    if (!isWait) {\n      setIsWait(true);\n      if (isLogin) {\n        if (\n          await login({\n            email: userData.email,\n            password: userData.password,\n          })\n        ) {\n          console.log(\"okat\");\n          router.push(\"/dashboard\");\n        } else {\n          setWrongID(true);\n        }\n      } else {\n        if (\n          await register({\n            username: userData.username,\n            email: userData.email,\n            password: userData.password,\n          })\n        ) {\n          setIsLogin(true);\n          setIsWait(false);\n        } else {\n          setWrongID(true);\n          setIsWait(false);\n        }\n      }\n    }\n  };\n  return (\n    <div className=\"flex items-center justify-center min-h-screen bg-gradient-to-br from-green-600 to-blue-500\">\n      <main className=\"bg-black/60 p-8 rounded-lg shadow-lg w-96 text-white transition duration-300 transform\">\n        <h1 className=\"text-2xl font-bold mb-6 text-center\">\n          {isLogin ? \"Login\" : \"Sign Up\"}\n        </h1>\n        {wrongID && (\n          <div className=\"flex items-center justify-center\">\n            <span className=\"text-red-500\">Something is wrong</span>\n          </div>\n        )}\n        <form action=\"\" onSubmit={formDataSubmit}>\n          {!isLogin && (\n            <div className=\"mb-4\">\n              <label\n                htmlFor=\"username\"\n                className=\"block text-sm font-medium mb-1\"\n              >\n                Username\n              </label>\n              <input\n                value={userData.username}\n                onChange={(e) =>\n                  setUserData((prv) => ({ ...prv, username: e.target.value }))\n                }\n                type=\"text\"\n                id=\"username\"\n                placeholder=\"Enter your username\"\n                className=\"w-full px-4 py-2 bg-white/10 text-white border border-white/20 rounded focus:outline-none focus:ring focus:ring-blue-500\"\n              />\n            </div>\n          )}\n\n          <div className=\"mb-4\">\n            <label htmlFor=\"email\" className=\"block text-sm font-medium mb-1\">\n              Email\n            </label>\n            <input\n              value={userData.email}\n              onChange={(e) =>\n                setUserData((prv) => ({ ...prv, email: e.target.value }))\n              }\n              type=\"text\"\n              id=\"email\"\n              placeholder=\"Enter your email\"\n              className=\"w-full px-4 py-2 bg-white/10 text-white border border-white/20 rounded focus:outline-none focus:ring focus:ring-blue-500\"\n            />\n          </div>\n\n          <div className=\"mb-4\">\n            <label\n              htmlFor=\"password\"\n              className=\"block text-sm font-medium mb-1\"\n            >\n              Password\n            </label>\n            <input\n              value={userData.password}\n              onChange={(e) =>\n                setUserData((prv) => ({ ...prv, password: e.target.value }))\n              }\n              type=\"text\"\n              id=\"password\"\n              placeholder=\"Enter your password\"\n              className=\"w-full px-4 py-2 bg-white/10 text-white border border-white/20 rounded focus:outline-none focus:ring focus:ring-blue-500\"\n            />\n          </div>\n          <button\n            type=\"submit\"\n            className={`w-full relative ${\n              isWait ? \"bg-gray-500\" : \"bg-blue-500 hover:bg-green-600\"\n            } text-white font-medium py-2 px-4 rounded transition duration-300`}\n          >\n            {isLogin ? \"Login\" : \"Sign Up\"}\n            {isWait && (\n              <div className=\"absolute right-24 top-2 animate-spin w-7 h-7 border-t-transparent border-solid rounded-full border-green-500 border-4 \"></div>\n            )}\n          </button>\n        </form>\n        <button\n          onClick={toggleForm}\n          className=\"w-full mt-4 bg-transparent hover:text-blue-500 font-medium text-sm transition duration-300\"\n        >\n          {isLogin\n            ? \"Don't have an account? Sign Up\"\n            : \"Already have an account? Login\"}\n        </button>\n      </main>\n    </div>\n  );\n};\n\nexport default Page;\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 313, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 323, "column": 0}, "map": {"version":3,"sources":["file:///home/sufal/Desktop/assiments/software_enginerr_intern/frontend/node_modules/next/navigation.js"],"sourcesContent":["module.exports = require('./dist/client/components/navigation')\n"],"names":[],"mappings":"AAAA,OAAO,OAAO","ignoreList":[0]}},
    {"offset": {"line": 324, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}