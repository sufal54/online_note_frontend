{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/sufal/Desktop/assiments/software_enginerr_intern/frontend/src/api/note.api.ts"],"sourcesContent":["import { ApiResponse, NoteListsDataType } from \"@/app/interfaces/interface\";\n\nconst baseUrl: string = process.env.NEXT_PUBLIC_BACKEND_URL as string;\n\nexport const createNote = async ({ title, content }: { title: string; content: string }): Promise<boolean> => {\n    const fetchData: ApiResponse = await fetch(`${baseUrl}/notes`, {\n        method: \"POST\",\n        body: JSON.stringify({ title, content })\n    }).then((data) => data.json());\n    return fetchData.success;\n}\n\nexport const getNotes = async ({ page, user }: { page: number, user: string }): Promise<NoteListsDataType[] | []> => {\n    const fetchData: ApiResponse = await fetch(`${baseUrl}/notes?page=${page}&user=${user}`).then((data) => data.json());\n    if (fetchData.success) {\n        return fetchData.data;\n    }\n    return [];\n}\n\nexport const updateNote = async ({ id, title, content }: { id: string; title: string; content: string }): Promise<boolean> => {\n    const fetchData: ApiResponse = await fetch(`${baseUrl}/notes/${id}`, {\n        method: \"PUT\",\n        body: JSON.stringify({ title, content })\n    }).then((data) => data.json());\n\n    return fetchData.success;\n}\n\nexport const deleteNote = async ({ id }: { id: string }): Promise<boolean> => {\n    const fetchData: ApiResponse = await fetch(`${baseUrl}/notes/${id}`, {\n        method: \"DELETE\",\n    }).then((data) => data.json());\n\n    return fetchData.success;\n}"],"names":[],"mappings":";;;;;;AAEA,MAAM;AAEC,MAAM,aAAa,OAAO,EAAE,KAAK,EAAE,OAAO,EAAsC;IACnF,MAAM,YAAyB,MAAM,MAAM,GAAG,QAAQ,MAAM,CAAC,EAAE;QAC3D,QAAQ;QACR,MAAM,KAAK,SAAS,CAAC;YAAE;YAAO;QAAQ;IAC1C,GAAG,IAAI,CAAC,CAAC,OAAS,KAAK,IAAI;IAC3B,OAAO,UAAU,OAAO;AAC5B;AAEO,MAAM,WAAW,OAAO,EAAE,IAAI,EAAE,IAAI,EAAkC;IACzE,MAAM,YAAyB,MAAM,MAAM,GAAG,QAAQ,YAAY,EAAE,KAAK,MAAM,EAAE,MAAM,EAAE,IAAI,CAAC,CAAC,OAAS,KAAK,IAAI;IACjH,IAAI,UAAU,OAAO,EAAE;QACnB,OAAO,UAAU,IAAI;IACzB;IACA,OAAO,EAAE;AACb;AAEO,MAAM,aAAa,OAAO,EAAE,EAAE,EAAE,KAAK,EAAE,OAAO,EAAkD;IACnG,MAAM,YAAyB,MAAM,MAAM,GAAG,QAAQ,OAAO,EAAE,IAAI,EAAE;QACjE,QAAQ;QACR,MAAM,KAAK,SAAS,CAAC;YAAE;YAAO;QAAQ;IAC1C,GAAG,IAAI,CAAC,CAAC,OAAS,KAAK,IAAI;IAE3B,OAAO,UAAU,OAAO;AAC5B;AAEO,MAAM,aAAa,OAAO,EAAE,EAAE,EAAkB;IACnD,MAAM,YAAyB,MAAM,MAAM,GAAG,QAAQ,OAAO,EAAE,IAAI,EAAE;QACjE,QAAQ;IACZ,GAAG,IAAI,CAAC,CAAC,OAAS,KAAK,IAAI;IAE3B,OAAO,UAAU,OAAO;AAC5B"}},
    {"offset": {"line": 47, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 53, "column": 0}, "map": {"version":3,"sources":["file:///home/sufal/Desktop/assiments/software_enginerr_intern/frontend/src/components/UpdateNote.tsx"],"sourcesContent":["\"use client\";\nimport React from \"react\";\n\nconst UpdateNote = () => {\n  return <form></form>;\n};\n\nexport default UpdateNote;\n"],"names":[],"mappings":";;;;AAAA;;AAGA,MAAM,aAAa;IACjB,qBAAO,8OAAC;;;;;AACV;uCAEe"}},
    {"offset": {"line": 67, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 73, "column": 0}, "map": {"version":3,"sources":["file:///home/sufal/Desktop/assiments/software_enginerr_intern/frontend/src/app/dashboard/page.tsx"],"sourcesContent":["\"use client\";\nimport { getUserData } from \"@/api/auth.api\";\nimport { deleteNote, getNotes } from \"@/api/note.api\";\nimport UpdateNote from \"@/components/UpdateNote\";\nimport { useStore } from \"@/contexts/context\";\nimport React, { useEffect, useState } from \"react\";\n\nconst page = () => {\n  const [isUpdate, setIsUpdate] = useState(false);\n  const [noteUpdateData, setNoteUpdateData] = useState<{\n    title: string;\n    content: string;\n  }>({\n    title: \"\",\n    content: \"\",\n  });\n  const [isRender, setIsRender] = useState(false);\n  const { myDetails, setMyDetails, setNoteLists, noteLists } = useStore();\n\n  const handelDelete = async (id: string) => {\n    if (await deleteNote({ id })) {\n      setIsRender((prv) => !prv);\n      setNoteLists(await getNotes({ page: 1, user: myDetails.username }));\n    }\n  };\n\n  // useEffect(() => {\n  //   const setUser = async () => {\n  //     if (!myDetails) {\n  //       setMyDetails(await getUserData());\n  //     }\n  //   };\n  //   setUser();\n  //   return () => {};\n  // }, []);\n  // useEffect(() => {\n  //   const setNote = async () => {\n  //     if (myDetails) {\n  //       setNoteLists(await getNotes({ page: 1, user: myDetails.username }));\n  //     }\n  //   };\n  //   setNote();\n  //   return () => {};\n  // }, [myDetails]);\n  return (\n    <div className=\"flex flex-col items-center justify-start min-h-screen bg-gradient-to-br from-green-600 to-blue-500\">\n      <div className=\"w-96 h-14 relative mt-20 text-black rounded-lg border border-white bg-blue-400\">\n        <input\n          type=\"text\"\n          placeholder=\"Search by username\"\n          className=\"h-full text-xl w-3/4 bg-transparent pl-3 rounded-lg outline-none\"\n        />\n        <button className=\"h-full w-1/4 rounded-lg p-1 bg-green-300\">\n          submit\n        </button>\n      </div>\n      <div className=\"mt-10\">\n        <span className=\"underline cursor-pointer\">Create Note</span>\n      </div>\n      <UpdateNote />\n      <div className=\"flex flex-wrap mt-7 gap-4\">\n        {noteLists.map((item, idx) => (\n          <div\n            key={idx}\n            className=\"p-2 relative flex flex-col flex-wrap items-center rounded-lg bg-red-400\"\n          >\n            <h1 className=\"text-2xl\">{item.title}</h1>\n            <p>{item.content}</p>\n            <span className=\"absolute top-3 right-3 underline text-blue-600\">\n              Edit\n            </span>\n            <span\n              onClick={() => handelDelete(item._id)}\n              className=\"absolute top-3 left-3 underline text-blue-600\"\n            >\n              Delete\n            </span>\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default page;\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AACA;AALA;;;;;;AAOA,MAAM,OAAO;IACX,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACzC,MAAM,CAAC,gBAAgB,kBAAkB,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAGhD;QACD,OAAO;QACP,SAAS;IACX;IACA,MAAM,CAAC,UAAU,YAAY,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAE;IACzC,MAAM,EAAE,SAAS,EAAE,YAAY,EAAE,YAAY,EAAE,SAAS,EAAE,GAAG,CAAA,GAAA,2HAAA,CAAA,WAAQ,AAAD;IAEpE,MAAM,eAAe,OAAO;QAC1B,IAAI,MAAM,CAAA,GAAA,yHAAA,CAAA,aAAU,AAAD,EAAE;YAAE;QAAG,IAAI;YAC5B,YAAY,CAAC,MAAQ,CAAC;YACtB,aAAa,MAAM,CAAA,GAAA,yHAAA,CAAA,WAAQ,AAAD,EAAE;gBAAE,MAAM;gBAAG,MAAM,UAAU,QAAQ;YAAC;QAClE;IACF;IAEA,oBAAoB;IACpB,kCAAkC;IAClC,wBAAwB;IACxB,2CAA2C;IAC3C,QAAQ;IACR,OAAO;IACP,eAAe;IACf,qBAAqB;IACrB,UAAU;IACV,oBAAoB;IACpB,kCAAkC;IAClC,uBAAuB;IACvB,6EAA6E;IAC7E,QAAQ;IACR,OAAO;IACP,eAAe;IACf,qBAAqB;IACrB,mBAAmB;IACnB,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBACC,MAAK;wBACL,aAAY;wBACZ,WAAU;;;;;;kCAEZ,8OAAC;wBAAO,WAAU;kCAA2C;;;;;;;;;;;;0BAI/D,8OAAC;gBAAI,WAAU;0BACb,cAAA,8OAAC;oBAAK,WAAU;8BAA2B;;;;;;;;;;;0BAE7C,8OAAC,gIAAA,CAAA,UAAU;;;;;0BACX,8OAAC;gBAAI,WAAU;0BACZ,UAAU,GAAG,CAAC,CAAC,MAAM,oBACpB,8OAAC;wBAEC,WAAU;;0CAEV,8OAAC;gCAAG,WAAU;0CAAY,KAAK,KAAK;;;;;;0CACpC,8OAAC;0CAAG,KAAK,OAAO;;;;;;0CAChB,8OAAC;gCAAK,WAAU;0CAAiD;;;;;;0CAGjE,8OAAC;gCACC,SAAS,IAAM,aAAa,KAAK,GAAG;gCACpC,WAAU;0CACX;;;;;;;uBAXI;;;;;;;;;;;;;;;;AAmBjB;uCAEe"}},
    {"offset": {"line": 229, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}